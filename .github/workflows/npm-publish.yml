name: 'Stage #3: Node.js Publish Package'

on:
  release:
    types: [created]
  workflow_dispatch:
  workflow_call:

jobs:
  publish-npm:
    name: NPM Publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - uses: actions/cache@v4
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node_modules-

      - name: Download lib artifact
        uses: actions/download-artifact@v4
        with:
          name: lib-artifact
          path: lib

      - name: Download version artifact
        uses: actions/download-artifact@v4
        with:
          name: version-artifact

      - name: Compare versions
        run: |
          VERSION=$(jq -r .version package.json)
          ARTIFACT_VERSION=$(cat version.txt)
          if [ "$VERSION" != "$ARTIFACT_VERSION" ]; then
            echo "Version has changed. Current version: $VERSION. New version: $ARTIFACT_VERSION."
            echo 'CHANGED=true' >> $GITHUB_ENV
          else
            echo "Version has not changed"
            echo 'CHANGED=false' >> $GITHUB_ENV
          fi

      - name: Set up SSH
        if: ${{ env.CHANGED == 'true' }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Compile specific npmjs documentation if version has changed
        if: ${{ env.CHANGED == 'true' }}
        run: |
          git clone "${{ secrets.WIKI_REPOSITORY }}"
          npm run build:docu-npmjs

      - name: Publish package if version has changed from package.json
        if: ${{ env.CHANGED == 'true' }}
        run: |
          git pull
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
