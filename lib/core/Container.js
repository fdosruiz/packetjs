"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),Object.defineProperty(a,"prototype",{writable:!1}),a}var Container=function(){function a(){_classCallCheck(this,a),this.context=[],this.properties={}}return _createClass(a,[{key:"add",value:function add(a,b){return this.context.push({key:a,callback:b}),this}},{key:"addProps",value:function addProps(a){return this.properties=_objectSpread(_objectSpread({},this.properties),a),this}},{key:"find",value:function find(a){return this.context.find(function(b){return b.key==a})}},{key:"get",value:function get(a){var b=this.find(a);return b?(b.instance||(b.instance=b.callback({container:this,props:this.properties})),b.instance):null}},{key:"getProps",value:function getProps(){return this.properties}}],[{key:"getContainer",value:function getContainer(){return a.container||(a.container=new a),a.container}}]),a}(),_default=Container;exports.default=_default,module.exports=exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDb250YWluZXIiLCJjb250ZXh0IiwicHJvcGVydGllcyIsImtleSIsImNhbGxiYWNrIiwicHVzaCIsInByb3BzIiwiZmluZCIsImN0eCIsImluc3RhbmNlIiwiY29udGFpbmVyIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvcmUvQ29udGFpbmVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRGVwZW5kZW5jeSBpbmplY3Rpb24gY29udGFpbmVyXG4gKiBAYXV0aG9yIEZyYW5jaXNjbyBSdWl6XG4gKi9cbmNsYXNzIENvbnRhaW5lciB7XG4gIHN0YXRpYyBjb250YWluZXI6IENvbnRhaW5lcjtcbiAgcHJpdmF0ZSBjb250ZXh0OiBDb250ZXh0W107XG4gIHByaXZhdGUgcHJvcGVydGllczogb2JqZWN0O1xuXG4gIC8qKlxuICAgKiBQcml2YXRlIGNvbnN0cnVjdG9yIHRvIGJlIG9ubHkgYWNjZXNzaWJsZSB3aXRoaW4gdGhlIGNsYXNzIGRlY2xhcmF0aW9uXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuY29udGV4dCA9IFtdO1xuICAgIHRoaXMucHJvcGVydGllcyA9IHt9O1xuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgYWx3YXlzIHRoZSBzYW1lIGluc3RhbmNlIG9mIHRoZSBjb250YWluZXIuIChTaW5nbGV0b24gcGF0dGVybilcbiAgICogQHJldHVybiBDb250YWluZXJcbiAgICovXG4gIHN0YXRpYyBnZXRDb250YWluZXIoKTogQ29udGFpbmVyIHtcbiAgICBpZiAoIUNvbnRhaW5lci5jb250YWluZXIpIHtcbiAgICAgIENvbnRhaW5lci5jb250YWluZXIgPSBuZXcgQ29udGFpbmVyKCk7XG4gICAgfVxuICAgIHJldHVybiBDb250YWluZXIuY29udGFpbmVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBhIG5ldyBzZXJ2aWNlIG9yIGZ1bmN0aW9uIHRvIGNvbnRleHRcbiAgICogQHBhcmFtIGtleSBVbmlxdWUga2V5IGZvciB0aGUgbmV3IHNlcnZpY2Ugb3IgZnVuY3Rpb25cbiAgICogQHBhcmFtIGNhbGxiYWNrIENhbGxiYWNrIGZ1bmN0aW9uIHdpdGggZGVwZW5kZW5jeSBpbmplY3Rpb24gbG9naWNcbiAgICovXG4gIHB1YmxpYyBhZGQoa2V5OiBzdHJpbmcsIGNhbGxiYWNrOiBDYWxsYmFjayk6IENvbnRhaW5lciB7XG4gICAgdGhpcy5jb250ZXh0LnB1c2goe1xuICAgICAga2V5LFxuICAgICAgY2FsbGJhY2ssXG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogQWRkIGFuIG9iamVjdCBjb25maWd1cmF0aW9uIHRvIGNvbnRhaW5lciBwcm9wZXJ0aWVzXG4gICAqIEBwYXJhbSBwcm9wcyBDb25maWd1cmF0aW9uIHByb3BlcnRpZXMgb2JqZWN0XG4gICAqIEByZXR1cm4gQ29udGFpbmVyXG4gICAqL1xuICBwdWJsaWMgYWRkUHJvcHMocHJvcHM6IG9iamVjdCk6IENvbnRhaW5lciB7XG4gICAgdGhpcy5wcm9wZXJ0aWVzID0ge1xuICAgICAgLi4udGhpcy5wcm9wZXJ0aWVzLFxuICAgICAgLi4ucHJvcHMsXG4gICAgfTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBGaW5kIGEgY29udGV4dFxuICAgKiBAcGFyYW0ga2V5IFVuaXF1ZSBrZXkgb2YgdGhlIHNlcnZpY2Ugb3IgZnVuY3Rpb25cbiAgICogQHByaXZhdGVcbiAgICogQHJldHVybiBDb250ZXh0IHwgdW5kZWZpbmVkXG4gICAqL1xuICBwcml2YXRlIGZpbmQoa2V5OiBzdHJpbmcpOiBDb250ZXh0IHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5jb250ZXh0LmZpbmQoKGN0eDogQ29udGV4dCkgPT4gY3R4LmtleSA9PSBrZXkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIGluc3RhbmNlIGZvciBhIGNvbmNyZXRlIGNvbnRleHRcbiAgICogQHBhcmFtIGtleSBVbmlxdWUga2V5IG9mIHRoZSBzZXJ2aWNlIG9yIGZ1bmN0aW9uXG4gICAqIEByZXR1cm4gYW55XG4gICAqL1xuICBwdWJsaWMgZ2V0KGtleTogc3RyaW5nKTogYW55IHtcbiAgICBjb25zdCBjdHggPSB0aGlzLmZpbmQoa2V5KTtcbiAgICBpZiAoY3R4KSB7XG4gICAgICBpZiAoIWN0eC5pbnN0YW5jZSkge1xuICAgICAgICBjdHguaW5zdGFuY2UgPSBjdHguY2FsbGJhY2soeyBjb250YWluZXI6IHRoaXMsIHByb3BzOiB0aGlzLnByb3BlcnRpZXMgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY3R4Lmluc3RhbmNlO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBjb25maWd1cmF0aW9uIHByb3BlcnRpZXMgb2JqZWN0XG4gICAqIEByZXR1cm4gb2JqZWN0XG4gICAqL1xuICBwdWJsaWMgZ2V0UHJvcHMoKTogb2JqZWN0IHtcbiAgICByZXR1cm4gdGhpcy5wcm9wZXJ0aWVzO1xuICB9XG59XG5cbi8qKlxuICogQ29udGV4dCBkZWZpbml0aW9uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ29udGV4dCB7XG4gIC8qKlxuICAgKiBVbmlxdWUga2V5IG9mIHRoZSBzZXJ2aWNlIG9yIGZ1bmN0aW9uXG4gICAqL1xuICBrZXk6IHN0cmluZztcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZnVuY3Rpb24gd2l0aCBkZXBlbmRlbmN5IGluamVjdGlvbiBsb2dpY1xuICAgKi9cbiAgY2FsbGJhY2s6IENhbGxiYWNrO1xuXG4gIC8qKlxuICAgKiBJbnN0YW5jZSBvZiBjYWxsYmFjayBmdW5jdGlvblxuICAgKi9cbiAgaW5zdGFuY2U/OiBhbnk7XG59XG5cbi8qKlxuICogUHJvcGVydGllcyBkZWZpbml0aW9uXG4gKi9cbmV4cG9ydCB0eXBlIFByb3BzID0ge1xuICBjb250YWluZXI6IENvbnRhaW5lcjtcbiAgcHJvcHM6IG9iamVjdCB8IGFueTtcbn1cblxuLyoqXG4gKiBDYWxsYmFjayBkZWZpbml0aW9uXG4gKi9cbmV4cG9ydCB0eXBlIENhbGxiYWNrID0gKHA6IFByb3BzKSA9PiBhbnk7XG5cbmV4cG9ydCBkZWZhdWx0IENvbnRhaW5lcjtcbiJdLCJtYXBwaW5ncyI6IjJ2Q0FJTUEsVSxZQVNKLFlBQXNCLHlCQUNwQixLQUFLQyxPQUFMLENBQWUsRUFESyxDQUVwQixLQUFLQyxVQUFMLENBQWtCLEVBQ25CLEMsd0NBa0JELGFBQVdDLENBQVgsQ0FBd0JDLENBQXhCLENBQXVELENBS3JELE1BSkEsTUFBS0gsT0FBTCxDQUFhSSxJQUFiLENBQWtCLENBQ2hCRixHQUFHLENBQUhBLENBRGdCLENBRWhCQyxRQUFRLENBQVJBLENBRmdCLENBQWxCLENBSUEsQ0FBTyxJQUNSLEMsd0JBT0Qsa0JBQWdCRSxDQUFoQixDQUEwQyxDQUt4QyxNQUpBLE1BQUtKLFVBQUwsZ0NBQ0ssS0FBS0EsVUFEVixFQUVLSSxDQUZMLENBSUEsQ0FBTyxJQUNSLEMsb0JBUUQsY0FBYUgsQ0FBYixDQUErQyxDQUM3QyxNQUFPLE1BQUtGLE9BQUwsQ0FBYU0sSUFBYixDQUFrQixTQUFDQyxDQUFELFFBQWtCQSxFQUFHLENBQUNMLEdBQUosRUFBV0EsQ0FBN0IsQ0FBbEIsQ0FDUixDLG1CQU9ELGFBQVdBLENBQVgsQ0FBNkIsQ0FDM0IsR0FBTUssRUFBRyxDQUFHLEtBQUtELElBQUwsQ0FBVUosQ0FBVixDQUFaLENBRDJCLE1BRXZCSyxFQUZ1QixFQUdwQkEsQ0FBRyxDQUFDQyxRQUhnQixHQUl2QkQsQ0FBRyxDQUFDQyxRQUFKLENBQWVELENBQUcsQ0FBQ0osUUFBSixDQUFhLENBQUVNLFNBQVMsQ0FBRSxJQUFiLENBQW1CSixLQUFLLENBQUUsS0FBS0osVUFBL0IsQ0FBYixDQUpRLEVBTWxCTSxDQUFHLENBQUNDLFFBTmMsRUFRcEIsSUFDUixDLHdCQU1ELG1CQUEwQixDQUN4QixNQUFPLE1BQUtQLFVBQ2IsQyw4QkFqRUQsdUJBQWlDLENBSS9CLE1BSEtGLEVBQVMsQ0FBQ1UsU0FHZixHQUZFVixDQUFTLENBQUNVLFNBQVYsQ0FBc0IsR0FBSVYsRUFFNUIsRUFBT0EsQ0FBUyxDQUFDVSxTQUNsQixDLGtCQWdHWVYsUyJ9